#*************************************************************************
#*************************************************************************
#**                                                                     **
#**        (C)Copyright 1985-2013, American Megatrends, Inc.            **
#**                                                                     **
#**                       All Rights Reserved.                          **
#**                                                                     **
#**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
#**                                                                     **
#**                       Phone: (770)-246-8600                         **
#**                                                                     **
#*************************************************************************
#*************************************************************************

#*************************************************************************
#<AMI_FHDR_START>
#---------------------------------------------------------------------------
# Name:     ProcessorStartup.mak
#
# Description:  
#   Make file for SEC. "Prepare" target will make INF files generated
#   to support e-links features. 
#
#---------------------------------------------------------------------------
#<AMI_FHDR_END>

#NumBistFunc := $(words $(GetBistFunc))

#Prepare : DETECT_ERRORS $(BUILD_DIR)/ProcessorStartupAutoGen.h $(BUILD_DIR)$(PATH_SLASH)SecCoreL.asm $(BUILD_DIR)/ProcessorStartup.inf $(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt
Prepare : $(BUILD_DIR)/ProcessorStartupAutoGen.h $(BUILD_DIR)$(PATH_SLASH)SecCoreL.asm $(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt

#DETECT_ERRORS:
#ifneq ($(NumBistFunc), 1)
#	$(error There should only be one BIST function. ELINK PS_GetBist is incorrect. See sample in ProcessorStartup.sdl.)
#endif

$(BUILD_DIR)/ProcessorStartupAutoGen.h : $(PROCESSOR_STARTUP_PATH)/ProcessorStartup.mak $(BUILD_DIR)/Token.mak
	$(ECHO)  \
"#include <PiPei.h>$(EOL)\
$(EOL)\
typedef void (BIST_LIST)(void *);$(EOL)\
extern BIST_LIST $(GetBistFunc) EndOfOneParamList;$(EOL)\
BIST_LIST* BistList[] = {$(GetBistFunc) NULL};$(EOL)\
$(EOL)\
typedef void (SEC_ELINK_LIST)();$(EOL)\
extern SEC_ELINK_LIST $(SecElinkFuncs) EndOfNoParamList;$(EOL)\
SEC_ELINK_LIST* SecElinkList[] = {$(SecElinkFuncs) NULL};$(EOL)\
$(EOL)\
typedef EFI_PEI_PPI_DESCRIPTOR* (RET_PPI_DESC_FUNC)();$(EOL)\
extern RET_PPI_DESC_FUNC $(SecAdditionalPpis) EndOfAddPpiList;$(EOL)\
RET_PPI_DESC_FUNC *RetPpiList[] = {$(SecAdditionalPpis) NULL}; $(EOL)"\
>$(BUILD_DIR)/ProcessorStartupAutoGen.h

$(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt: $(BUILD_DIR)$(PATH_SLASH)equates.equ
	$(ECHO) ".686p$(EOL).xmm$(EOL).model small,c$(EOL)"\
> $(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt

$(BUILD_DIR)$(PATH_SLASH)equates.equ:
	$(ECHO) ";This file is generated by mak file and expected to be used by SecCoreL.asm "\
> $(BUILD_DIR)$(PATH_SLASH)equates.equ

#$(BUILD_DIR)$(PATH_SLASH)SecCoreL.asm : $(BUILD_DIR)$(PATH_SLASH)SecCore.asm $(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt
#	@if exist $(PROCESSOR_STARTUP_PATH)$(PATH_SLASH)Ia32$(PATH_SLASH)SecCoreL.asm del /F /Q $(PROCESSOR_STARTUP_PATH)$(PATH_SLASH)Ia32$(PATH_SLASH)SecCoreL.asm
#	$(CP) $(CP_OPTS) $(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt + $(BUILD_DIR)$(PATH_SLASH)SecCore.asm $(PROCESSOR_STARTUP_PATH)$(PATH_SLASH)Ia32$(PATH_SLASH)SecCoreL.asm

$(BUILD_DIR)$(PATH_SLASH)SecCoreL.asm : $(BUILD_DIR)$(PATH_SLASH)SecCore.asm $(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt
ifeq ($(BUILD_OS), $(BUILD_OS_LINUX))
	cat $(BUILD_DIR)/SecCoreHdr.txt $(BUILD_DIR)/SecCore.asm > $(BUILD_DIR)$(PATH_SLASH)SecCoreL.inc
else
	$(CP) $(CP_OPTS) $(BUILD_DIR)$(PATH_SLASH)SecCoreHdr.txt + $(BUILD_DIR)$(PATH_SLASH)SecCore.asm $(BUILD_DIR)$(PATH_SLASH)SecCoreL.inc
endif

#$(BUILD_DIR)/ProcessorStartup.inf : $(PROCESSOR_STARTUP_PATH)/ProcessorStartup.mak $(BUILD_DIR)/Token.mak
#	$(ECHO)  \
#"[Defines]$(EOL)\
#  INF_VERSION                    = 0x00010005$(EOL)\
#  BASE_NAME                      = ProcessorStartup$(EOL)\
#  FILE_GUID                      = 0833A84D-8A39-431f-BD1C-30965AAE71DD$(EOL)\
#  MODULE_TYPE                    = SEC$(EOL)\
#  VERSION_STRING                 = 1.0$(EOL)\
#  LIBRARY_CLASS                  = PlatformSecLib$(EOL)\
#$(EOL)\
#[Sources]$(EOL)\
#  SecCoreL.asm$(EOL)\
#  $(patsubst %,../%,$(subst $(SPACE),$(EOL)$(SPACE),$(SEC_STARTUP_SRC)))$(EOL)\
#  $(EOL)\
#[Packages] $(EOL)\
#  MdePkg/MdePkg.dec$(EOL)\
#  UefiCpuPkg/UefiCpuPkg.dec$(EOL)\
#  IA32FamilyCpuPkg/IA32FamilyCpuPkg.dec$(EOL)\
#  $(EOL)\
#[LibraryClasses] $(EOL)\
#  PerformanceLib$(EOL)\
#  LocalApicLib$(EOL)\
#  $(EOL)\
#[Pcd] $(EOL)\
#  gEfiCpuTokenSpaceGuid.PcdTemporaryRamBase$(EOL)\
#  gEfiCpuTokenSpaceGuid.PcdTemporaryRamSize$(EOL)\
#  gEfiMdePkgTokenSpaceGuid.PcdPciExpressBaseAddress$(EOL)"\
#> $(BUILD_DIR)/ProcessorStartup.inf
