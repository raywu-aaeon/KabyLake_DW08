;; @file
;  Reset Vector Data structure
;  This structure is located at 0xFFFFFFC0
;
;@copyright
;  Copyright (c) 2015, Intel Corporation. All rights reserved.
;  This software and associated documentation (if any) is furnished
;  under a license and may only be used or copied in accordance
;  with the terms of the license. Except as permitted by such
;  license, no part of this software or documentation may be
;  reproduced, stored in a retrieval system, or transmitted in any
;  form or by any means without the express written consent of
;  Intel Corporation.
;  This file contains an 'Intel Pre-EFI Module' and is licensed
;  for Intel CPUs and Chipsets under the terms of your license
;  agreement with Intel or your vendor. This file may be
;  modified by the user, subject to additional terms of the
;  license agreement.
;;

    BITS 16
    segment stack
    SECTION .text

;
; The layout of this file is fixed. The build tool makes assumption of the layout.
;

    org     0
;
; FIT table pointer for LT-SX.
;
FitTablePointer: DD 0xeeeeeeee, 0xeeeeeeee

    TIMES   0x10-($-$$) DB 0
;
; This is located at 0xFFFFFFD0h
;
    mov     di, "PA"
    jmp     ApStartup

    TIMES   0x20-($-$$) DB 0
;
; Pointer to the entry point of the PEI core
; It is located at 0xFFFFFFE0, and is fixed up by some build tool
; So if the value 8..1 appears in the final FD image, tool failure occurs.
;
PeiCoreEntryPoint: DD 0x87654321

;
; This is the handler for all kinds of exceptions. Since it's for debugging
; purpose only, nothing except a deadloop would be done here. Developers could
; analyze the cause of the exception if a debugger had been attached.
;
global ASM_PFX(InterruptHandler)
ASM_PFX(InterruptHandler):
    jmp     $
    iret

    TIMES   0x30-($-$$) DB 0
;
; For IA32, the reset vector must be at 0xFFFFFFF0, i.e., 4G-16 byte
; Execution starts here upon power-on/platform-reset.
;
ResetHandler:
    nop
    nop
ApStartup:
    ;
    ; Jmp Rel16 instruction
    ; Use machine code directly in case of the assembler optimization
    ; SEC entry point relatvie address will be fixed up by some build tool.
    ;
    ; Typically, SEC entry point is the function _ModuleEntryPoint() defined in
    ; SecEntry.asm
    ;
    DB      0xe9
    DW      -3

    TIMES   0x38-($-$$) DB 0
;
; Ap reset vector segment address is at 0xFFFFFFF8
; This will be fixed up by some build tool,
; so if the value 1..8 appears in the final FD image,
; tool failure occurs
;
ApSegAddress: dd 0x12345678

    TIMES   0x3c-($-$$) DB 0
;
; BFV Base is at 0xFFFFFFFC
; This will be fixed up by some build tool,
; so if the value 1..8 appears in the final FD image,
; tool failure occurs.
;
BfvBase: DD 0x12345678

;
; Nothing can go here, otherwise the layout of this file would change.
;

