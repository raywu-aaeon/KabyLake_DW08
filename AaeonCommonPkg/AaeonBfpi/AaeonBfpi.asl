Scope(\_SB) {
  Device(BFPI) {
    Name(_HID, "PNP0C14")       // Note: The _HID should be defined to "*pnp0c14".
    Name(_UID, "BFPI")
    
    OperationRegion(WMDB,SystemMemory,0xFFFF000,0x1004)  // Address will be updated in AaeonBfpiDxe.c
    Field(WMDB, AnyAcc, NoLock, Preserve)
    {
      WDBA, 32,
      WDBF, 0x1000
    }

    // Description of data, events and methods supported by this ASL device.
    Name(_WDG, Buffer() {
      // ATKMethod
      // guid("{97845ED0-4E6D-11DE-8A39-0800200C9A66}")
      0xD0, 0x5E, 0x84, 0x97, 0x6D, 0x4E, 0xDE, 0x11, 0x8A, 0x39, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66,
      78, 66,        // Object Id (NB)
      1,             // Instance Count
      0x02,          // Flags (WMIACPI_REGFLAG_METHOD)
      // Notify Event
      // guid("{0B3CBB35-E3C2-45ED-91C2-4C5A6D195D1C}")
      0x35, 0xbb, 0x3c, 0x0b, 0xc2, 0xe3, 0xed, 0x45, 0x91, 0xc2, 0x4c, 0x5a, 0x6d, 0x19, 0x5d, 0x1c,
      0xff, 0,       // Notification Id
      1,             // Instance Count
      0x08,          // Flags (WMIACPI_REGFLAG_EVENT)
      
      //
      // For returning the MOF data
      0x21, 0x12, 0x90, 0x05, 0x66, 0xd5, 0xd1, 0x11, 0xb2, 0xf0, 0x00, 0xa0, 0xc9, 0x06, 0x29, 0x10,
      78, 65,        // Object ID (NA)
      1,             // Instance Count
      0x00,          // Flags
    }) // end of _WDG

    //---------------------------------------------------------------------------
    //
    // Name: WMNB
    //
    // Description: Main method for BFPI WMI
    //
    // Input:
    //        Arg0 has the instance being queried
    //        Arg1 has the method id (Uppercase)
    //        Arg2 has the data passed
    // Output:
    //
    // Notes:
    //
    //---------------------------------------------------------------------------
    Method(WMNB, 3) {
      //Input Definition
      CreateDWordField (Arg2, 0x00, IIA0) // Input: IntegerArgument
      CreateDWordField (Arg2, 0x04, IIA1) // Input: IntegerArgument
      ShiftRight (And(Arg1,0xFFFFFFFF), 16, Local0) // Input: Interger - Function number
      And (Arg1, 0xFFFF, Local1) // Input: Interger - Sub-function number

      If (LEqual(Local0, 0x0000)) {  // Report global capability
        Return(WRGC(Local1, IIA0, IIA1))
      }

#if ASL_WMI_DIO_SUPPORT
      If (LEqual(local0, ASL_BFPI_DIO_FN)) {
        Return(\_SB.ADIO.DIOO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_WDT_SUPPORT
      If (LEqual(local0, ASL_BFPI_WDT_FN)) {
        Return(WDTO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_HWM_SUPPORT
      If (LEqual(local0, ASL_BFPI_HWM_FN)) {
        Return(HWMO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_BLC_SUPPORT
      If (LEqual(local0, ASL_BFPI_BLC_FN)) {
        Return(BLCO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_I2C_SUPPORT
      If (LEqual(local0, ASL_BFPI_I2C_FN)) {
        Return(I2CO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_SMF_SUPPORT
      If (LEqual(local0, ASL_BFPI_SMF_FN)) {
        Return(SMFO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_PWM_SUPPORT
      If (LEqual(local0, ASL_BFPI_PWM_FN)) {
        Return(PWMO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_PDA_SUPPORT
      If (LEqual(local0, ASL_BFPI_PDA_FN)) {
        Return(PDAO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_SMB_SUPPORT
      If (LEqual(local0, ASL_BFPI_SMB_FN)) {
        Return(SMBO(Local1, IIA0, IIA1))
      }
#endif
#if ASL_WMI_BST_SUPPORT
      If (LEqual(local0, ASL_BFPI_BST_FN)) {
        Return(BSTO(Local1, IIA0, IIA1))
      }
#endif
	    Return(ASL_BFPI_NOT_SUPPORTED)
    } // End of WMNB method

    //---------------------------------------------------------------------------
    //
    // Name: _WED
    //
    // Description:
    //
    // Input:
    //
    // Output:
    //
    // Notes:
    //
    //---------------------------------------------------------------------------
    Method(_WED, 1) {
	    Return(ONES)
    }

    //---------------------------------------------------------------------------
    //
    // Name: WQNA
    //
    // Description: Return MOF data
    //
    // Input: NA
    //
    // Output: MOF binary data
    //
    // Notes:
    //
    //---------------------------------------------------------------------------
    Name(WQNA, Buffer(2240) {
      0x46, 0x4f, 0x4d, 0x42, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x08, 0x00, 0x00, 0x10, 0x4c, 0x00, 0x00,
      0x44, 0x53, 0x00, 0x01, 0x1a, 0x7d, 0xda, 0x54, 0x18, 0xc5, 0xa4, 0x00, 0x01, 0x06, 0x18, 0x42,
      0x10, 0x05, 0x10, 0x12, 0x6a, 0x91, 0x42, 0x04, 0x0a, 0x41, 0x24, 0x79, 0x0e, 0x60, 0x30, 0x1a,
      0x40, 0x24, 0x09, 0x42, 0x2e, 0x98, 0x98, 0x00, 0x21, 0x10, 0x92, 0x28, 0xc0, 0xbc, 0x00, 0xdd,
      0x02, 0x0c, 0x0b, 0xb0, 0x2d, 0xc0, 0xb4, 0x00, 0xc7, 0x40, 0xea, 0xdf, 0x1f, 0xa2, 0x34, 0x10,
      0x89, 0x80, 0xa4, 0x52, 0x06, 0x61, 0x01, 0xca, 0x05, 0xf8, 0x16, 0xa0, 0x1d, 0x51, 0x92, 0x05,
      0x58, 0x86, 0x11, 0x81, 0xbd, 0x0a, 0xb0, 0x29, 0x60, 0x37, 0xd1, 0x38, 0x41, 0x39, 0xc3, 0x40,
      0xc1, 0x1b, 0x90, 0x0d, 0x82, 0xc9, 0x1e, 0x04, 0x4a, 0xcc, 0x68, 0xc8, 0x0c, 0x3a, 0x9f, 0x8b,
      0xe0, 0x4f, 0xa2, 0x70, 0x01, 0xd2, 0x31, 0x34, 0x82, 0x23, 0x4a, 0x50, 0x21, 0xb2, 0x7c, 0x0a,
      0x70, 0x2a, 0x40, 0x90, 0x00, 0x8d, 0x48, 0xb2, 0x0e, 0xa5, 0xc1, 0x9c, 0x56, 0x40, 0x8e, 0x75,
      0x2e, 0xcc, 0x33, 0x86, 0x06, 0x67, 0xa0, 0xb8, 0xb1, 0xe2, 0x9d, 0x94, 0x35, 0x23, 0x69, 0x10,
      0x51, 0x8e, 0x05, 0x2b, 0x03, 0x42, 0x1e, 0x05, 0x58, 0x05, 0xd5, 0x64, 0x12, 0xd8, 0xbd, 0x00,
      0x73, 0x02, 0xbc, 0x09, 0x10, 0x37, 0x50, 0x59, 0x13, 0xb0, 0xf1, 0x50, 0x85, 0x09, 0xb0, 0x05,
      0x23, 0x94, 0xda, 0x60, 0x84, 0xd2, 0x18, 0x82, 0x40, 0xe2, 0x44, 0x89, 0xd8, 0xa0, 0x00, 0x67,
      0xb0, 0x42, 0x89, 0x18, 0x26, 0x44, 0x84, 0xca, 0x30, 0x88, 0x43, 0x28, 0xa1, 0xc5, 0x8d, 0xd0,
      0xfe, 0x20, 0xc8, 0xd0, 0x71, 0x67, 0x00, 0x8f, 0xe7, 0xbc, 0xce, 0xe8, 0x94, 0x82, 0x9c, 0x92,
      0x09, 0x4e, 0xf8, 0x18, 0xcb, 0x05, 0x97, 0x78, 0x54, 0x61, 0x84, 0x4f, 0xe0, 0x68, 0x47, 0x02,
      0x49, 0x00, 0x51, 0x24, 0x78, 0xd4, 0xc8, 0x13, 0x3c, 0x00, 0x78, 0x90, 0x1e, 0xf6, 0x49, 0x9e,
      0x40, 0x90, 0x73, 0xb4, 0xce, 0xa1, 0x92, 0x31, 0x30, 0xac, 0x04, 0xbf, 0x08, 0x3e, 0x0a, 0xe0,
      0xff, 0xff, 0xae, 0x01, 0x75, 0x41, 0x78, 0x14, 0x60, 0x93, 0x0e, 0x87, 0x19, 0xaf, 0x87, 0x1d,
      0xee, 0x04, 0x9e, 0x00, 0x8e, 0x84, 0x41, 0x1c, 0xd1, 0xc1, 0x61, 0x07, 0x79, 0x32, 0x47, 0x56,
      0xaa, 0x00, 0xb3, 0xd7, 0x00, 0x7d, 0x1e, 0x3c, 0x1e, 0x9f, 0x0a, 0x3c, 0x9f, 0x27, 0x81, 0x04,
      0x96, 0x3f, 0x08, 0xd4, 0xc8, 0x0c, 0xed, 0x01, 0x9f, 0xd6, 0x4b, 0x81, 0x4f, 0x0b, 0x87, 0xc5,
      0xc4, 0x9e, 0x26, 0xe8, 0x78, 0xc0, 0x7f, 0x5e, 0x38, 0xfe, 0x08, 0xa7, 0xef, 0xf9, 0xfa, 0xe4,
      0x60, 0x60, 0xec, 0x80, 0xec, 0x57, 0x00, 0x42, 0xf0, 0x32, 0x47, 0xa4, 0x63, 0x40, 0x84, 0x63,
      0x32, 0x6c, 0xe0, 0xe7, 0x06, 0xe3, 0xbf, 0x30, 0xbc, 0x42, 0x9c, 0xd5, 0x49, 0x04, 0x3a, 0xaf,
      0xa2, 0xa1, 0x34, 0x1d, 0x8b, 0x3c, 0x4e, 0xa0, 0x47, 0xc0, 0x8f, 0x01, 0xd1, 0xa3, 0x9e, 0xcd,
      0x11, 0x1c, 0x4f, 0x94, 0x93, 0x38, 0x20, 0x5f, 0x23, 0x8c, 0x10, 0xfe, 0xe1, 0xe0, 0x49, 0xc3,
      0x87, 0x08, 0x1f, 0x28, 0xce, 0xe9, 0x6d, 0xc0, 0xeb, 0x22, 0x02, 0x94, 0x70, 0x28, 0xe1, 0x83,
      0x40, 0x36, 0x96, 0x6a, 0x02, 0x0d, 0xd2, 0xa9, 0x96, 0x2b, 0xa5, 0xb8, 0x9a, 0x4e, 0xf4, 0x03,
      0x08, 0xfb, 0x2c, 0xf1, 0xc2, 0x60, 0xc5, 0x17, 0x06, 0x32, 0x8b, 0x18, 0xc1, 0x42, 0xc4, 0x39,
      0xab, 0x38, 0x21, 0xe2, 0xbd, 0x19, 0x98, 0xa0, 0x7a, 0x68, 0x1d, 0x4d, 0xb8, 0x6e, 0x0a, 0xe9,
      0xa2, 0xd1, 0xb0, 0x0c, 0x67, 0x25, 0x30, 0x82, 0x33, 0x88, 0x01, 0x1d, 0x13, 0x42, 0x56, 0x0e,
      0x04, 0xa8, 0x11, 0xf9, 0xe4, 0xe0, 0x71, 0xbf, 0x75, 0x18, 0xe2, 0x91, 0xe2, 0x31, 0xe2, 0xff,
      0x9f, 0x60, 0x26, 0x08, 0x5d, 0x22, 0x3c, 0x51, 0x5f, 0x08, 0xf8, 0x55, 0xc5, 0x47, 0x04, 0x83,
      0x5b, 0xdf, 0x7d, 0x04, 0x34, 0xd3, 0x30, 0xd0, 0xd9, 0x46, 0xba, 0xd1, 0x13, 0xe1, 0x04, 0xd5,
      0x1c, 0x27, 0xe8, 0x2c, 0xf8, 0x19, 0x84, 0x4f, 0x4f, 0x97, 0x04, 0xe8, 0x53, 0x38, 0x21, 0xcf,
      0xe0, 0xcc, 0xd8, 0x8c, 0x70, 0x87, 0x04, 0x78, 0x40, 0xbe, 0x14, 0xf8, 0x14, 0xf0, 0x60, 0xc0,
      0xc6, 0x10, 0x22, 0x4c, 0x34, 0xa3, 0x73, 0x79, 0x73, 0x47, 0x09, 0x9a, 0x3b, 0x05, 0xf1, 0xdc,
      0x1d, 0x16, 0x42, 0x4e, 0xe6, 0x8e, 0xba, 0xde, 0xf8, 0x0e, 0x73, 0x90, 0x9e, 0x23, 0x3f, 0xa5,
      0x3c, 0xa2, 0x24, 0x18, 0x6c, 0xf0, 0xf4, 0x0a, 0x82, 0xbf, 0xcc, 0xf8, 0xb0, 0xe0, 0x79, 0x58,
      0xe0, 0xe8, 0x41, 0x73, 0x5f, 0x30, 0x4e, 0xf0, 0x60, 0x0f, 0x36, 0x9e, 0x3d, 0x66, 0x1c, 0x9e,
      0x3d, 0x1f, 0x82, 0x67, 0xcf, 0x07, 0xe7, 0x2b, 0x07, 0xfc, 0xe1, 0xf3, 0xb9, 0xb1, 0x31, 0x61,
      0xa7, 0x0f, 0xe3, 0xff, 0x3f, 0x7d, 0xf8, 0xf0, 0x18, 0x09, 0xeb, 0x91, 0x05, 0x10, 0xc9, 0x1a,
      0x17, 0x6a, 0x9c, 0xbe, 0x1a, 0x3d, 0x2f, 0xf9, 0xfa, 0x81, 0x1b, 0xd4, 0xfb, 0x87, 0xc7, 0x66,
      0x58, 0x8f, 0x9c, 0xc3, 0x1a, 0x2d, 0xec, 0x01, 0xbf, 0x99, 0xf8, 0x58, 0xe3, 0xfb, 0x10, 0x83,
      0xf5, 0x7d, 0x06, 0x1c, 0x80, 0x78, 0xef, 0x77, 0x00, 0x32, 0x01, 0x03, 0x32, 0x54, 0xdf, 0x9c,
      0xc0, 0x72, 0x6f, 0x3a, 0xd6, 0x53, 0x3a, 0x88, 0xe7, 0x11, 0x1c, 0xce, 0xfb, 0x08, 0x0e, 0xe7,
      0x81, 0x04, 0x56, 0xb6, 0x0b, 0x0a, 0x4a, 0x14, 0x84, 0x12, 0x3d, 0x1f, 0x34, 0x94, 0xd3, 0xf0,
      0x18, 0x70, 0xf0, 0xb0, 0xae, 0x27, 0x80, 0x95, 0xff, 0xff, 0xf5, 0x04, 0xe0, 0xf8, 0x7a, 0x7c,
      0x3d, 0x81, 0xf7, 0xff, 0xbf, 0x9e, 0xc0, 0x21, 0xf6, 0xf5, 0x04, 0xb8, 0x0a, 0xbe, 0x9e, 0x80,
      0x10, 0xf1, 0x55, 0xd1, 0x17, 0x14, 0xfc, 0xe9, 0x0b, 0x5e, 0x96, 0xdb, 0x09, 0x6a, 0x20, 0x4e,
      0x72, 0x3b, 0x41, 0x9c, 0x56, 0x8e, 0xd7, 0x77, 0x80, 0x18, 0x0f, 0x75, 0x3e, 0x2f, 0xfa, 0x66,
      0x02, 0xf8, 0xfe, 0xff, 0xdf, 0x4c, 0x00, 0x26, 0x06, 0x87, 0xd0, 0x41, 0x0c, 0x6c, 0x37, 0x13,
      0xe0, 0xf0, 0xff, 0xbf, 0x99, 0x80, 0x69, 0x80, 0x6f, 0x26, 0xe0, 0xbd, 0x89, 0x30, 0x90, 0x47,
      0x11, 0xdc, 0xad, 0x04, 0xee, 0xb0, 0xdf, 0x4a, 0x00, 0xa6, 0xfd, 0xff, 0x6f, 0x25, 0x00, 0x9f,
      0x4e, 0x01, 0x6f, 0x25, 0x80, 0xa7, 0x9b, 0x08, 0xfb, 0xff, 0xdf, 0x4a, 0xf0, 0x99, 0x6e, 0x25,
      0x28, 0x0e, 0xa7, 0x39, 0x7b, 0xa1, 0x61, 0x3c, 0x32, 0xdf, 0xd0, 0xd9, 0x38, 0xd8, 0xbd, 0x04,
      0xe0, 0xee, 0xff, 0xff, 0x5e, 0x02, 0xd8, 0x0b, 0x7f, 0x2f, 0x01, 0x1d, 0xe4, 0x7b, 0x09, 0xb0,
      0x15, 0x7b, 0xfa, 0x02, 0x02, 0x87, 0x11, 0x38, 0x37, 0x13, 0xb8, 0xb7, 0x14, 0x76, 0x33, 0x01,
      0xd3, 0xff, 0xff, 0x66, 0x02, 0xf0, 0xff, 0xff, 0x7f, 0x33, 0x01, 0x9c, 0x8c, 0xfc, 0xcd, 0x04,
      0xf0, 0x74, 0x02, 0xe3, 0x37, 0x13, 0x58, 0x79, 0x6e, 0x26, 0xa8, 0x63, 0x81, 0xb3, 0x9c, 0xc1,
      0x20, 0x4c, 0xc4, 0xe7, 0xb1, 0xb7, 0x01, 0x7b, 0xbe, 0x98, 0x00, 0xed, 0xff, 0xff, 0xc5, 0x04,
      0xe0, 0xff, 0xff, 0x9f, 0x80, 0x45, 0xbf, 0x98, 0x80, 0x0e, 0xf6, 0xc5, 0x04, 0xd8, 0x8e, 0xee,
      0x11, 0x0c, 0x18, 0x9c, 0x45, 0xb0, 0xf7, 0x12, 0xb8, 0x27, 0x30, 0x7e, 0x2f, 0x01, 0x1c, 0xff,
      0xff, 0xef, 0x25, 0x00, 0xa7, 0xef, 0x0a, 0xef, 0x25, 0x60, 0xfa, 0xff, 0xdf, 0x4b, 0x80, 0xfd,
      0x01, 0x0c, 0x73, 0x2f, 0xc1, 0x67, 0xbb, 0x97, 0xa0, 0x44, 0x41, 0x28, 0xd1, 0xd3, 0x41, 0x83,
      0x3d, 0xaa, 0xb8, 0xaf, 0x07, 0x9e, 0xc5, 0x49, 0x44, 0x0e, 0xf3, 0x0a, 0x70, 0x68, 0x61, 0x42,
      0x54, 0x8c, 0xae, 0x71, 0x1e, 0x95, 0xcd, 0x5f, 0x4d, 0x00, 0xba, 0xfc, 0xff, 0xaf, 0x26, 0x00,
      0x9b, 0xd6, 0xe3, 0xab, 0x09, 0xb8, 0x6e, 0x01, 0xbe, 0x9a, 0x00, 0x57, 0xc1, 0xa7, 0x01, 0x08,
      0xff, 0xff, 0xab, 0x09, 0xfc, 0xe9, 0x85, 0x3c, 0xd5, 0x20, 0x6f, 0x23, 0x38, 0x9c, 0xc7, 0x11,
      0x58, 0xa7, 0x30, 0x58, 0xb7, 0x13, 0x76, 0x24, 0x63, 0x53, 0x08, 0x7b, 0x96, 0x3e, 0x32, 0xf0,
      0xab, 0x09, 0xc0, 0xc0, 0xff, 0xff, 0x29, 0x0c, 0xe0, 0xc9, 0xd8, 0x5e, 0x4d, 0x80, 0xed, 0x29,
      0x0c, 0x8c, 0x57, 0x13, 0x7e, 0xd9, 0xe4, 0x67, 0x11, 0xfc, 0xbd, 0x04, 0xd6, 0xff, 0xff, 0x5e,
      0xc2, 0x8e, 0x64, 0xec, 0x5e, 0x02, 0x70, 0xfe, 0xff, 0x7f, 0x2f, 0x01, 0x2c, 0x9e, 0x02, 0xde,
      0x4b, 0x00, 0x4f, 0x97, 0x4d, 0x7e, 0x2f, 0x81, 0x71, 0xd9, 0x84, 0x23, 0x72, 0x3a, 0xc2, 0x7c,
      0xd9, 0x04, 0x6e, 0xff, 0xff, 0xab, 0x09, 0xc0, 0xff, 0xff, 0xff, 0x65, 0x13, 0x18, 0x63, 0xbe,
      0x6c, 0x02, 0x76, 0x4e, 0x23, 0xc7, 0x77, 0x78, 0x2f, 0x9b, 0xe0, 0xbe, 0x9d, 0x60, 0xa6, 0xe6,
      0xcb, 0x8a, 0x27, 0x72, 0x34, 0xa7, 0xe0, 0xab, 0x09, 0x60, 0xe4, 0xff, 0x7f, 0x35, 0x01, 0x6c,
      0x4e, 0x8d, 0x5f, 0x4d, 0x00, 0x77, 0x43, 0x79, 0x0a, 0x03, 0xae, 0xff, 0xff, 0xcb, 0x26, 0xdc,
      0xab, 0x09, 0xb0, 0x3d, 0x85, 0x81, 0xf1, 0x6a, 0x82, 0x9b, 0x8a, 0xef, 0x61, 0xec, 0x2c, 0x82,
      0x39, 0x85, 0xc1, 0x82, 0x3c, 0xbe, 0x9a, 0x4f, 0x61, 0x00, 0x11, 0xfe, 0xff, 0xa7, 0x30, 0x80,
      0xc5, 0xb8, 0xaf, 0x26, 0xe0, 0xfd, 0xff, 0x9f, 0xc2, 0x80, 0xe5, 0x40, 0xcf, 0x2e, 0xcc, 0x53,
      0x18, 0xb8, 0x6f, 0x27, 0xec, 0x9c, 0xcd, 0xa6, 0x10, 0xfa, 0x40, 0x4e, 0xe2, 0x84, 0x3d, 0x2a,
      0x5f, 0x4d, 0x00, 0xee, 0xfc, 0xff, 0x8f, 0xd6, 0x00, 0xdb, 0xc6, 0xf6, 0x6a, 0x02, 0x6c, 0x4f,
      0x61, 0x60, 0xf8, 0xff, 0x5f, 0x4d, 0xe0, 0x5d, 0x45, 0x18, 0x48, 0x98, 0xf3, 0xad, 0x13, 0x44,
      0xe3, 0x7a, 0x17, 0xe1, 0xf7, 0x12, 0x98, 0xe7, 0x6c, 0x76, 0x2f, 0x01, 0xd8, 0xfa, 0xff, 0xbf,
      0x97, 0x00, 0x5c, 0x38, 0x05, 0xbc, 0x97, 0x00, 0x9e, 0xae, 0x22, 0xec, 0x5e, 0x02, 0x27, 0xe5,
      0xbd, 0x04, 0xc5, 0xe1, 0x34, 0xe7, 0x2f, 0xf4, 0x09, 0xe0, 0x34, 0x42, 0x1c, 0x86, 0x91, 0x0e,
      0xa4, 0x67, 0x01, 0xff, 0x7f, 0x02, 0x5f, 0x4c, 0x00, 0xee, 0xff, 0xff, 0x2f, 0x26, 0xc0, 0x5e,
      0xce, 0x55, 0x13, 0x74, 0x90, 0x2f, 0x26, 0xc0, 0x56, 0xfe, 0x01, 0x0c, 0x08, 0x9c, 0x45, 0x18,
      0x4a, 0xe4, 0x20, 0x47, 0x16, 0x28, 0x66, 0x90, 0x67, 0x00, 0x06, 0xc7, 0x8f, 0x24, 0xec, 0x70,
      0xe0, 0xab, 0x81, 0x27, 0xc1, 0xaf, 0x28, 0x70, 0xef, 0x2b, 0xec, 0x8a, 0x02, 0x2c, 0xfe, 0xff,
      0x57, 0x14, 0x80, 0xff, 0xff, 0xff, 0x2b, 0x0a, 0xf0, 0x1e, 0xf9, 0x2b, 0x0a, 0xe0, 0xe9, 0x2c,
      0xc6, 0xaf, 0x28, 0x60, 0x16, 0xf6, 0x68, 0x30, 0x81, 0xe2, 0x8c, 0x5c, 0x52, 0x60, 0x50, 0x97,
      0x0d, 0x4b, 0x1a, 0x1e, 0xea, 0x40, 0xe0, 0x61, 0x3d, 0x71, 0xc7, 0x3e, 0x80, 0xb3, 0xf7, 0xbc,
      0x8e, 0x8f, 0x5d, 0x34, 0x3c, 0x3e, 0x7e, 0x9c, 0xf0, 0x74, 0x8e, 0xc8, 0xda, 0x11, 0x75, 0x5a,
      0x33, 0x4c, 0x02, 0x1f, 0x05, 0xce, 0xed, 0xec, 0xa2, 0xf1, 0x03, 0x05, 0x0c, 0x40, 0x36, 0x08,
      0x16, 0x60, 0x10, 0xa8, 0xff, 0xff, 0x98, 0xe1, 0xde, 0x14, 0x4e, 0xe1, 0x91, 0x80, 0x4d, 0x34,
      0xd2, 0x79, 0xc6, 0x38, 0xef, 0x23, 0x78, 0xdb, 0x38, 0xe9, 0xd7, 0x39, 0x5f, 0x32, 0x0c, 0x77,
      0x42, 0xc7, 0x8a, 0x19, 0xb5, 0x07, 0xe4, 0x11, 0x9f, 0xb0, 0x27, 0x18, 0xe8, 0x6d, 0xc5, 0x27,
      0x02, 0x03, 0xc5, 0x8f, 0x74, 0x22, 0xef, 0x04, 0x26, 0x38, 0xff, 0x03, 0xc2, 0x9c, 0x0d, 0x7c,
      0xf6, 0x69, 0xf5, 0x84, 0x81, 0x70, 0x7f, 0xc1, 0xd0, 0x4c, 0xde, 0x2b, 0x5e, 0x02, 0x62, 0x04,
      0xb1, 0x35, 0x01, 0xb6, 0x86, 0x24, 0x20, 0x1f, 0x2e, 0xa2, 0x9c, 0x72, 0xa0, 0x38, 0x51, 0xa3,
      0x34, 0x27, 0xc0, 0x18, 0x14, 0x02, 0x24, 0xd6, 0x6b, 0xc5, 0x2b, 0x4b, 0xb0, 0x50, 0xc1, 0xc2,
      0x04, 0x31, 0x54, 0xfb, 0x83, 0x20, 0xe3, 0xc7, 0x1d, 0x04, 0x3c, 0x9e, 0x03, 0x3b, 0xa4, 0x63,
      0x7a, 0x93, 0x30, 0x81, 0x67, 0x7d, 0x8e, 0xe5, 0x8e, 0x46, 0xe2, 0x51, 0x85, 0x11, 0x3f, 0x81,
      0xc5, 0x3f, 0x56, 0x74, 0xc6, 0x70, 0x24, 0x78, 0xd4, 0xb1, 0xc3, 0xa7, 0x00, 0x4f, 0xd2, 0x63,
      0x7f, 0x24, 0x31, 0xc8, 0x41, 0xfa, 0x3e, 0x78, 0xaa, 0x1e, 0x03, 0x3b, 0xa8, 0xf8, 0xbc, 0xe1,
      0xf3, 0x00, 0xde, 0x35, 0xa0, 0xae, 0xf9, 0x3e, 0x62, 0x80, 0xe3, 0x80, 0x02, 0x7f, 0x3c, 0x3e,
      0x1a, 0x78, 0x3e, 0x2f, 0x4b, 0xec, 0x98, 0xe1, 0x41, 0xf0, 0x91, 0x19, 0xda, 0x63, 0x3e, 0xad,
      0xa7, 0x02, 0xdf, 0x0f, 0x4c, 0x60, 0xb1, 0x97, 0x26, 0x3a, 0x1e, 0x38, 0xff, 0xff, 0xf1, 0x80,
      0xeb, 0x50, 0x70, 0xfc, 0xcf, 0x1b, 0xc6, 0xf6, 0xc1, 0xc1, 0x11, 0x4f, 0x3d, 0xe8, 0x51, 0xf8,
      0xf4, 0x80, 0x39, 0x00, 0xb0, 0x41, 0x5b, 0xd4, 0xa9, 0x05, 0x75, 0xc0, 0xf0, 0xa9, 0x85, 0x1d,
      0x72, 0xf8, 0xb5, 0x9b, 0x1f, 0x29, 0x7c, 0xac, 0x00, 0xf3, 0xc4, 0x5e, 0x2a, 0x1e, 0x34, 0x7c,
      0xe0, 0x01, 0xdf, 0x68, 0x70, 0x07, 0x1e, 0x78, 0x20, 0x67, 0x76, 0x30, 0xc7, 0xe3, 0xa1, 0x9c,
      0xcb, 0x29, 0x9d, 0xc0, 0x99, 0xe2, 0x08, 0x8a, 0x1c, 0x1e, 0x7a, 0x04, 0xfc, 0xdc, 0xf0, 0xf0,
      0xc3, 0x46, 0xf0, 0xfe, 0xe3, 0x49, 0x1c, 0x90, 0x0f, 0x1e, 0x46, 0x08, 0xfe, 0x34, 0xf1, 0x7c,
      0xe2, 0x5b, 0x87, 0x27, 0xf5, 0x12, 0x70, 0x08, 0x6c, 0x04, 0x5c, 0xa1, 0x4d, 0x9f, 0x1a, 0x8d,
      0x5a, 0x35, 0x28, 0x53, 0xa3, 0x4c, 0x83, 0x5a, 0x7d, 0x2a, 0x35, 0x66, 0x6c, 0x04, 0x8f, 0x41,
      0x7a, 0x20, 0xe8, 0x04, 0xe0, 0x50, 0x20, 0x54, 0xf0, 0x11, 0x46, 0x46, 0x2e, 0x6b, 0x06, 0x11,
      0x90, 0xb3, 0x3c, 0x2e, 0x04, 0xe4, 0x64, 0x20, 0x02, 0xb2, 0x9a, 0x35, 0x08, 0xc8, 0xd2, 0x40,
      0x04, 0x64, 0xa1, 0x26, 0x80, 0x98, 0x6c, 0x10, 0x01, 0x39, 0xe0, 0x93, 0x41, 0x40, 0xfe, 0xff,
      0xa7, 0x05, 0x11, 0x90, 0xb3, 0xbf, 0x0f, 0x04, 0x64, 0x25, 0x36, 0x80, 0x98, 0x56, 0x1f, 0x40,
      0x4c, 0x38, 0x88, 0x80, 0x1c, 0x63, 0xdd, 0x02, 0x72, 0x28, 0x10, 0x01, 0x39, 0xfa, 0xdf, 0x4d,
      0x40, 0xd6, 0xf1, 0x60, 0x10, 0x90, 0x55, 0x3d, 0x13, 0x04, 0x64, 0x8d, 0x20, 0x02, 0x72, 0x1a,
      0x2d, 0x40, 0x2c, 0x1a, 0x88, 0x80, 0x1c, 0xd4, 0x0b, 0x10, 0x8b, 0x0d, 0x22, 0x20, 0xcb, 0xfb,
      0xae, 0x09, 0xc8, 0x5a, 0x41, 0x04, 0x64, 0xe5, 0x6e, 0x80, 0x58, 0x0e, 0x10, 0x01, 0x39, 0xad,
      0x1d, 0x20, 0x16, 0x1d, 0x44, 0x40, 0x16, 0xe2, 0x07, 0x88, 0xc9, 0x02, 0x11, 0x90, 0x23, 0x18,
      0x02, 0x62, 0x79, 0x40, 0x04, 0xe4, 0x74, 0x8a, 0x80, 0x58, 0x56, 0x10, 0x01, 0x59, 0x97, 0x25,
      0x20, 0x26, 0x12, 0x44, 0x40, 0x96, 0xac, 0x09, 0x88, 0x05, 0x00, 0x11, 0x90, 0x63, 0xbe, 0x2a,
      0x04, 0xe4, 0xcc, 0x20, 0x02, 0xb2, 0x02, 0x55, 0x40, 0x4c, 0x0f, 0x88, 0x80, 0xac, 0xfd, 0x5d,
      0x25, 0x20, 0x07, 0x01, 0x11, 0x90, 0x63, 0x3d, 0x65, 0x02, 0x91, 0x90, 0x20, 0x02, 0xb2, 0xa0,
      0xa7, 0x84, 0x80, 0xac, 0x0e, 0x44, 0x83, 0x27, 0x9f, 0x99, 0x40, 0x44, 0x39, 0x88, 0x80, 0x9c,
      0xf2, 0x21, 0x11, 0x88, 0x44, 0x06, 0xd1, 0x79, 0x83, 0xfc, 0x6a, 0x02, 0x11, 0x39, 0x20, 0x02,
      0xb2, 0x74, 0x6f, 0x83, 0xa5, 0x20, 0x02, 0x72, 0x2a, 0x71, 0x40, 0x2c, 0x23, 0x88, 0x80, 0xac,
      0xc4, 0xdd, 0x60, 0x29, 0x88, 0x80, 0x2c, 0x52, 0x1e, 0x10, 0x93, 0x0c, 0x22, 0x20, 0x47, 0xfb,
      0xec, 0x09, 0xc8, 0x39, 0x41, 0x04, 0xe4, 0xd4, 0xfe, 0x80, 0x98, 0x86, 0x47, 0x9a, 0x80, 0xac,
      0xff, 0x6b, 0x11, 0x88, 0x84, 0x01, 0x11, 0x30, 0xf9, 0x4f, 0x04, 0x22, 0x41, 0x41, 0x04, 0xe4,
      0x20, 0xaf, 0xa1, 0x20, 0xe4, 0xff, 0x2f, 0xe3, 0x7d, 0xa1, 0x83, 0x01, 0x01, 0xa1, 0xff, 0x7f
    })
 
    //------------------------------------------------------------------------
    // Procedure:    WRGC
    // Description:  WMI Report Global Capability
    // Input:
    //   Arg0 : Sub-function number. Basically not used in WRGC.
    //   Arg1 : IIA0, Select capability data to return -
    //     0x00: Revision of AAEON ACPI WMI Specification
    //     0x01: Physical memory address of 4K byte data buffer
    //     0x02: Put capability in JSON format into data buffer 
    //   Arg2 : IIA1, Basically not used in WRGC.
    // Output:
    //     Arg1 = 0x00, Return Value = Bit 15~0: Minor Version of spec
    //                              Bit 31~16: Major Version of spec
    //     Arg1 = 0x01, Return Value = (UINT32 *)address
    //     Arg1 = 0x02, Return Value = BFPI_STATUS_SUCCESS
    //-------------------------------------------------------------------------
    Method(WRGC, 3) {
      If (LEqual(Arg1, 0)) {  // Revision of AAEON ACPI WMI Spec.
        Return (ASL_BPIV)
      }
      If (LEqual(Arg1, 1)) {  // Physical memory address of 4K byte(?) data buffer
        Return (WDBA)
      }
      If (LEqual(Arg1, 2)) {  // Full capability in JSON format
        Store (BRGC, WDBF)
        Return (ASL_BFPI_SUCCESS)
      }
      Return(ASL_BFPI_INVALID_PARAMETER)
    }
  }  // Device(BFPI)
}  // Scope(\_SB)