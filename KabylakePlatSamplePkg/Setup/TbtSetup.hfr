/** @file

 @copyright
  INTEL CONFIDENTIAL
  Copyright 2014 - 2018 Intel Corporation.

  The source code contained or described herein and all documents related to the
  source code ("Material") are owned by Intel Corporation or its suppliers or
  licensors. Title to the Material remains with Intel Corporation or its suppliers
  and licensors. The Material may contain trade secrets and proprietary and
  confidential information of Intel Corporation and its suppliers and licensors,
  and is protected by worldwide copyright and trade secret laws and treaty
  provisions. No part of the Material may be used, copied, reproduced, modified,
  published, uploaded, posted, transmitted, distributed, or disclosed in any way
  without Intel's prior express written permission.

  No license under any patent, copyright, trade secret or other intellectual
  property right is granted to or conferred upon you by disclosure or delivery
  of the Materials, either expressly, by implication, inducement, estoppel or
  otherwise. Any license under such intellectual property rights must be
  express and approved by Intel in writing.

  Unless otherwise agreed by Intel in writing, you may not remove or alter
  this notice or any other notice embedded in Materials by Intel or
  Intel's suppliers or licensors in any way.

  This file contains a 'Sample Driver' and is licensed as such under the terms
  of your license agreement with Intel or your vendor. This file may be modified
  by the user, subject to the additional terms of the license agreement.

@par Specification
**/

  // Define forms
// AMI_OVERRIDE_START - AMI TBT setup adjustment
#ifdef ADVANCED_FORM_SET

#ifdef FORM_SET_GOTO
  // Define goto commands for the forms defined in this file
  goto TBT_FORM_ID,
    prompt = STRING_TOKEN(STR_TBT_FORM),
    help = STRING_TOKEN(STR_TBT_FORM_HELP);

#endif

#ifdef FORM_SET_FORM
// AMI_OVERRIDE_END - AMI TBT setup adjustment
    form formid = AUTO_ID(TBT_FORM_ID),
    title     = STRING_TOKEN(STR_TBT_FORM);

// AMI_OVERRIDE_START - Update option default by Token.
    oneof varid = SETUP_DATA.TbtSupport,
      questionid = AUTO_ID(KEY_TBT_SUPPORT),
      prompt   = STRING_TOKEN(STR_TBT_SUPPORT_PROMPT),
      help     = STRING_TOKEN(STR_TBT_SUPPORT_HELP),
      default  = DEFAULT_TBT_ENABLE,
      option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED | INTERACTIVE;
      option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED | INTERACTIVE;
      option text = STRING_TOKEN(STR_FULLY_DISABLED), value = 2, flags = RESET_REQUIRED | INTERACTIVE;
    endoneof;
// AMI_OVERRIDE_END - Update option default by Token.

// AMI_OVERRIDE_START - EIP253592 PCIe SSD can't be found on slot(D29F0) if the option of "Fully Disabled" on ThunderBolt is no function.
    suppressif ideqval SETUP_DATA.TbtSupport == 1 OR ideqval SETUP_DATA.TbtSupport == 2;
// AMI_OVERRIDE_END - EIP253592 PCIe SSD can't be found on slot(D29F0) if the option of "Fully Disabled" on ThunderBolt is no function.
      oneof varid = SETUP_DATA.TbtPcieSupport,
        prompt      = STRING_TOKEN(STR_TBT_PCIE_SUPPORT_PROMPT),
        help        = STRING_TOKEN(STR_TBT_PCIE_SUPPORT_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags =  RESET_REQUIRED;
     endoneof;
    endif;


// AMI_OVERRIDE_START - EIP253592 PCIe SSD can't be found on slot(D29F0) if the option of "Fully Disabled" on ThunderBolt is no function.
    suppressif ideqval SETUP_DATA.TbtSupport == 0 OR ideqval SETUP_DATA.TbtSupport == 2;
// AMI_OVERRIDE_END - EIP253592 PCIe SSD can't be found on slot(D29F0) if the option of "Fully Disabled" on ThunderBolt is no function.

     oneof varid = SETUP_DATA.TbtUsbOn,
        questionid = AUTO_ID(KEY_TBT_USB_ON),
        prompt      = STRING_TOKEN(STR_TBT_USB_ON_PROMPT),
        help        = STRING_TOKEN(STR_TBT_USB_ON_HELP),
//AMI_OVERRIDE_START >>> EIP357796 : Set TBT as enable as the default, some related settings are not applied
//        default value = cond(ideqvallist SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRDdr4 BoardIdKabylakeRLpddr3
//                             ? 0x0:0x1), defaultstore = MyStandardDefault,
        default value = DEFAULT_BOOT_FROM_TBT_USB_SUPPORT,
//AMI_OVERRIDE_END <<< EIP357796 : Set TBT as enable as the default, some related settings are not applied
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags =  RESET_REQUIRED | INTERACTIVE;
    endoneof;

      oneof varid  = SETUP_DATA.TbtVtdBaseSecurity,
//AMI_OVERRIDE_START >>> follow AMI AUTO_ID setup style 
//          questionid  = KEY_TBT_VTD_SECURITY_ID,
          questionid  = AUTO_ID(KEY_TBT_VTD_SECURITY_ID),
//AMI_OVERRIDE_END<<< follow AMI AUTO_ID setup style 
          prompt      = STRING_TOKEN(STR_TBT_VTD_SECURITY_SETTINGS),
          help        = STRING_TOKEN(STR_TBT_VTD_SECURITY_SETTINGS_HELP),
          flags       = INTERACTIVE,
          default     = 0, defaultstore = MyStandardDefault,
          option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED| INTERACTIVE;
          option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED| INTERACTIVE;
      endoneof;

      oneof varid = SETUP_DATA.TbtBootOn,
        questionid = AUTO_ID(KEY_TBT_BOOT_ON),
        prompt      = STRING_TOKEN(STR_TBT_BOOT_ON_PROMPT),
        help        = STRING_TOKEN(STR_TBT_BOOT_ON_HELP),
//AMI_OVERRIDE_START >>> EIP357796 : Set TBT as enable as the default, some related settings are not applied
//        default value = cond(ideqvallist SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRDdr4 BoardIdKabylakeRLpddr3
//                             ? 0x0:0x1), defaultstore = MyStandardDefault,
        default value = DEFAULT_BOOT_FROM_TBT_SUPPORT,
//AMI_OVERRIDE_END <<< EIP357796 : Set TBT as enable as the default, some related settings are not applied
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_BOOTONCE), value = 1, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_PREBOOTACL), value = 2, flags =  RESET_REQUIRED | INTERACTIVE;		
      endoneof;

// AMI_OVERRIDE_START - Removed due to Intel doesn't verify it yet.
#if 0
      oneof varid = SETUP_DATA.Multicontroller,
        questionid = AUTO_ID(KEY_MULTICONTROLLER_SUPPORT),
        prompt      = STRING_TOKEN(STR_TBT_MULTICONTROLLER_SUPPORT_PROMPT),
        help        = STRING_TOKEN(STR_TBT_MULTICONTROLLER_SUPPORT_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;
#endif
// AMI_OVERRIDE_END - Removed due to Intel doesn't verify it yet.

      oneof varid = SETUP_DATA.TrOsup,
        prompt      = STRING_TOKEN(STR_TBT_TITAN_RIDGE_OSUP_PROMPT),
        help        = STRING_TOKEN(STR_TBT_TITAN_RIDGE_OSUP_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;

//AMI_OVERRIDE_START - EIP322154 - Remove Thunderbolt DGPU related setup items
// AMI_OVERRIDE_START - ThunderBolt Detachable Graphics Setup Support
#if defined(TBT_X_CONNECT_SUPPORT) && (TBT_X_CONNECT_SUPPORT == 1)
      oneof varid = SETUP_DATA.TbtXConnectSupport,
        questionid = AUTO_ID(KEY_TBT_X_CONNECT_SUPPORT),
        prompt   = STRING_TOKEN(STR_TBT_X_CONNECT_PROMPT),
        help     = STRING_TOKEN(STR_TBT_X_CONNECT_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;
#endif
// AMI_OVERRIDE_END - ThunderBolt Detachable Graphics Setup Support
//AMI_OVERRIDE_END - EIP322154 - Remove Thunderbolt DGPU related setup items

//AMI_OVERRIDE_START - EIP338529 -  Follow AR BWG 1.35 to update Sx Entry Flow
      //
      // Follow AR BWG ver. 1.35 updated:
      //   Remove SPR supported checking before executing Go2Sx/Go2Sx_No_Wake in Sx entry flow.
      //
      // Based on this reason, TbtWakeupSupport is always workable without suppressed by SprSupport checking.
      //
      checkbox varid  = SETUP_DATA.TbtWakeupSupport,
        prompt   = STRING_TOKEN(STR_TBT_DEVICE_WAKE_UP_SUPPORT_PROMPT),
        help     = STRING_TOKEN(STR_TBT_DEVICE_WAKE_UP_SUPPORT_HELP),
        // Flags behavior for checkbox is overloaded so that it equals
        // a DEFAULT value.  CHECKBOX_DEFAULT = ON, 0 = off
        // AMI_OVERRIDE_START - EIP270506 Support default value for "Wake From Thunderbolt(TM) Devices"
        //flags    = CHECKBOX_DEFAULT | RESET_REQUIRED,
        //key      = 0,
        flags      = RESET_REQUIRED,
        default    = DEFAULT_TBT_WAKE_UP_SUPPORT,
        default    = DEFAULT_TBT_WAKE_UP_SUPPORT, defaultstore = MyStandardDefault,
        // AMI_OVERRIDE_END - EIP270506 Support default value for "Wake From Thunderbolt(TM) Devices"
      endcheckbox;
//AMI_OVERRIDE_END - EIP338529 -  Follow AR BWG 1.35 to update Sx Entry Flow

      oneof varid   = SETUP_DATA.TbtCacheLineSize,
        prompt      = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_PROMPT),
        help        = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_HELP),
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_000), value = 0x00, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_001), value = 0x01, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_002), value = 0x02, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_004), value = 0x04, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_008), value = 0x08, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_016), value = 0x10, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_032), value = 0x20, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_064), value = 0x40, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_CACHE_LINE_SIZE_128), value = 0x80, flags =  RESET_REQUIRED | INTERACTIVE;
      endoneof;

      checkbox varid  = SETUP_DATA.Gpio3ForcePwr,
        prompt = STRING_TOKEN(STR_PCI_GPIO3_FORCE_PWR),
        help = STRING_TOKEN(STR_PCI_GPIO3_FORCE_PWR_HELP),
        // Flags behavior for checkbox is overloaded so that it equals
        // a DEFAULT value.  CHECKBOX_DEFAULT = ON, 0 = off
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;

// AMI_OVERRIDE_START - Removed due to Intel doesn't verify it yet.
#if 0
      checkbox varid  = SETUP_DATA.Gpio3ForcePwr1,
        prompt = STRING_TOKEN(STR_PCI_GPIO3_FORCE_PWR1),
        help = STRING_TOKEN(STR_PCI_GPIO3_FORCE_PWR1_HELP),
        // Flags behavior for checkbox is overloaded so that it equals
        // a DEFAULT value.  CHECKBOX_DEFAULT = ON, 0 = off
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;
#endif
// AMI_OVERRIDE_END - Removed due to Intel doesn't verify it yet.

      numeric varid = SETUP_DATA.Gpio3ForcePwrDly,
        prompt    = STRING_TOKEN(STR_PCI_GPIO3_FORCE_PWR_DLY),
        help      = STRING_TOKEN(STR_PCI_GPIO3_FORCE_PWR_DLY_HELP),
        flags     = RESET_REQUIRED | INTERACTIVE,
        minimum   = 1,
        maximum   = 5000,
        step      = 0,
        default   = 200,
      endnumeric;

      oneof varid = SETUP_DATA.TbtSkipPciEnumeration,
        prompt   = STRING_TOKEN(STR_TBT_SKIP_PCI_ENUMERATION_PROMPT),
        help     = STRING_TOKEN(STR_TBT_SKIP_PCI_ENUMERATION_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;

// AMI_OVERRIDE_START - Update option default by Token.
      oneof varid = SETUP_DATA.TbtSkipPciOprom,
        prompt   = STRING_TOKEN(STR_TBT_SKIP_PCI_OPROM_PROMPT),
        help     = STRING_TOKEN(STR_TBT_SKIP_PCI_OPROM_HELP),
        default  = DEFAULT_SKIP_TBT_OPTIONROM,
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = MANUFACTURING | RESET_REQUIRED;
      endoneof;
// AMI_OVERRIDE_END - Update option default by Token.

      oneof varid = SETUP_DATA.TbtSkipIntLine,
        prompt   = STRING_TOKEN(STR_TBT_SKIP_PCI_INTLINE_PROMPT),
        help     = STRING_TOKEN(STR_TBT_SKIP_PCI_INTLINE_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;

      oneof varid = SETUP_DATA.TbtAcpiRemovalSupport,
        prompt   = STRING_TOKEN(STR_TBT_ACPI_REMOVAL_SUPPORT_PROMPT),
        help     = STRING_TOKEN(STR_TBT_ACPI_REMOVAL_SUPPORT_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
      endoneof;

      oneof varid   = SETUP_DATA.SecurityMode,
        questionid  = AUTO_ID(TBT_SECURITY_LEVEL_KEY),
        prompt      = STRING_TOKEN(STR_TBT_SECURITY_LEVEL_PROMPT),
        help        = STRING_TOKEN(STR_TBT_SECURITY_LEVEL_HELP),
// AMI_OVERRIDE_START - Config secure mode
//        default value = cond(ideqvallist SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeA0Rvp3Ppv BoardIdSkylakeULpddr3Rvp5Ppv BoardIdSkylakeURvp7Ppv BoardIdSkylakeAioRvp10CrbPpv BoardIdSkylakeHaloDdr4Rvp11Ppv BoardIdKabylakeRDdr4 BoardIdKabylakeRLpddr3
//                                                                    ? 0x1:0x0), defaultstore = MyStandardDefault,
// AMI_OVERRIDE_START - Restore Default SecurityMode fail. EIP307449
        default value = DEFAULT_TBT_SECURITY_MODE,
// AMI_OVERRIDE_END - Restore Default SecurityMode fail. EIP307449
        option text = STRING_TOKEN(STR_TBT_MODE0), value = 0, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_MODE1), value = 1, flags = RESET_REQUIRED | INTERACTIVE;
// AMI_OVERRIDE_END - Config secure mode
        option text = STRING_TOKEN(STR_TBT_MODE2), value = 2, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_MODE3), value = 3, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_MODE4), value = 4, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;

      oneof varid = SETUP_DATA.CallSmiBeforeBoot,
        prompt = STRING_TOKEN(STR_PCI_CALL_SMI_BEFORE_BOOT),
        help = STRING_TOKEN(STR_PCI_CALL_SMI_BEFR_BOOT_HLP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags =  RESET_REQUIRED;
        option text = STRING_TOKEN(STR_RESET_HR), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENUMERATE_HR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_RESET_ENUMERATE_HR), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;

      numeric varid  = SETUP_DATA.ReserveMemoryPerSlot,
        prompt = STRING_TOKEN(STR_PCI_RSRV_MM_PER_PHY_SLT),
        help = STRING_TOKEN(STR_PCI_RSRV_MM_PER_PHY_SLT_HELP),
        flags   = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 65535,
        step        = 0,
        default     = 32,
      endnumeric;

      numeric varid  = SETUP_DATA.ReservePMemoryPerSlot,
        prompt = STRING_TOKEN(STR_PCI_RSRV_PMM_PER_PHY_SLT),
        help = STRING_TOKEN(STR_PCI_RSRV_PMM_PER_PHY_SLT_HELP),
        flags   = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 65535,
        step        = 0,
        default     = 32,
      endnumeric;

      numeric varid  = SETUP_DATA.ReserveIoPerSlot,
        prompt = STRING_TOKEN(STR_PCI_RSRV_IO_PER_PHY_SLT),
        help = STRING_TOKEN(STR_PCI_RSRV_IO_PER_PHY_SLT_HELP),
        flags   = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 64,
        step        = 4,
        default     = 4,
      endnumeric;

      //checkbox varid  = SETUP_DATA.AssignIo,
      //  prompt   = STRING_TOKEN(STR_PCI_ASSIGN_IO),
      //  help     = STRING_TOKEN(STR_PCI_ASSIGN_IO_HELP),
      //  flags    = CHECKBOX_DEFAULT|RESET_REQUIRED, // a DEFAULT value.  CHECKBOX_DEFAULT = ON, 0 = off
      //  key = 0,
      //endcheckbox;

      //oneof varid  = SETUP_DATA.MoreIOForPorts,
      //  prompt = STRING_TOKEN(STR_PCI_MORE_IO_FOR_PORTS),
      //  help = STRING_TOKEN(STR_PCI_MORE_IO_FOR_PORTS_HELP),
      //  option text = STRING_TOKEN(STR_PCI_MORE_IO_FOR_PORTS_34), value = 34, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      //  option text = STRING_TOKEN(STR_PCI_MORE_IO_FOR_PORTS_56), value = 56, flags = RESET_REQUIRED;
      //endoneof;

      //checkbox varid  = SETUP_DATA.AssignPMem,
      //prompt   = STRING_TOKEN(STR_PCI_ASSIGN_PMEM),
      //help     = STRING_TOKEN(STR_PCI_ASSIGN_PMEM_HELP),
      //flags    = CHECKBOX_DEFAULT|RESET_REQUIRED, // a DEFAULT value.  CHECKBOX_DEFAULT = ON, 0 = off
      //key = 0,
      //endcheckbox;

      oneof varid  = SETUP_DATA.TBTHotSMI,
        prompt = STRING_TOKEN(STR_PCI_HOT_PLUG_SW_SMI),
        help = STRING_TOKEN(STR_PCI_HOT_PLUG_SW_SMI_HELP),
// AMI_OVERRIDE_START >>> TBTHotSMI default
//        default value = cond(ideqvallist SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRDdr4 BoardIdKabylakeRLpddr3
//                             ? 0x1:0x0), defaultstore = MyStandardDefault,
// AMI_OVERRIDE_END <<< TBTHotSMI default
        option text = STRING_TOKEN(STR_DISABLED),   value = 0, flags = RESET_REQUIRED;
// AMI_OVERRIDE_START >>> TBTHotSMI default
        option text = STRING_TOKEN(STR_ENABLED),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
// AMI_OVERRIDE_END <<< TBTHotSMI default
      endoneof;

      oneof varid  = SETUP_DATA.Gpio5Filter,
        prompt = STRING_TOKEN(STR_PCI_GPIO5_FILTER),
        help = STRING_TOKEN(STR_PCI_GPIO5_FILTER_HELP),
// AMI_OVERRIDE_START - GPIO 5 default
//        default value = cond(ideqvallist SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeSds BoardIdKabylakeRDdr4 BoardIdKabylakeRLpddr3
//                      ? 0x1:0x0), defaultstore = MyStandardDefault,
// AMI_OVERRIDE_END - GPIO 5 default
        option text = STRING_TOKEN(STR_DISABLED),   value = 0, flags = RESET_REQUIRED;
// AMI_OVERRIDE_START - GPIO 5 default
        option text = STRING_TOKEN(STR_ENABLED),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
// AMI_OVERRIDE_END - GPIO 5 default
      endoneof;

      oneof varid  = SETUP_DATA.TBTHotNotify,
        prompt = STRING_TOKEN(STR_PCI_HOT_PLUG_NOTIFY),
        help = STRING_TOKEN(STR_PCI_HOT_PLUG_NOTIFY_HELP),
        option text = STRING_TOKEN(STR_DISABLED),   value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;

      oneof varid  = SETUP_DATA.EnableMsiInFadt,
        prompt = STRING_TOKEN(STR_PCI_MSI_ENABLED_IN_FADT),
        help = STRING_TOKEN(STR_PCI_MSI_ENABLED_IN_FADT_HELP),
        option text = STRING_TOKEN(STR_DISABLED),   value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;

      oneof varid  = SETUP_DATA.TBTSetClkReq,
        prompt = STRING_TOKEN(STR_PCI_TBT_CLKREQ),
        help = STRING_TOKEN(STR_PCI_TBT_CLKREQ_HELP),
        option text = STRING_TOKEN(STR_DISABLED),   value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED),   value = 1, flags =  RESET_REQUIRED;
      endoneof;

      oneof varid  = SETUP_DATA.TbtAspm,
        prompt = STRING_TOKEN(STR_PCI_TBT_ASPM),
        help = STRING_TOKEN(STR_PCI_TBT_ASPM_HELP),
        option text = STRING_TOKEN(STR_DISABLED),   value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PCIE_ASPM_L0S_STRING),   value = 1, flags =  RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PCIE_ASPM_L1_STRING),   value = 2, flags =  RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PCIE_ASPM_L0SL1_STRING),   value = 3, flags =  RESET_REQUIRED;
      endoneof;

      oneof varid  = SETUP_DATA.TbtLtr,
        prompt = STRING_TOKEN(STR_PCI_TBT_LTR),
        help = STRING_TOKEN(STR_PCI_TBT_LTR_HELP),
        option text = STRING_TOKEN(STR_DISABLED),   value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED),   value = 1, flags =  RESET_REQUIRED;
      endoneof;

// AMI_OVERRIDE_START - Update TbtSelector by AMI setup option.
#if 0
    suppressif NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeA0Rvp3 AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeA0Rvp3Ppv AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRDdr4    AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRLpddr3;
      oneof varid  = SETUP_DATA.TbtSelector,
        questionid = AUTO_ID(KEY_TBT_SELECTOR_RVP3),
        prompt = STRING_TOKEN(STR_PCI_TBT_SELECTOR_RVP3),
        help = STRING_TOKEN(STR_PCI_TBT_SELECTOR_HELP),
        default value = cond(ideqvallist SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRDdr4 BoardIdKabylakeRLpddr3
                             ? 0x0:0x1), defaultstore = MyStandardDefault,
        option text = STRING_TOKEN(STR_AUTO),   value = 0, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_PCIERP1_PROMPT),   value = 1, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;
    endif;

    suppressif NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeURvp7       AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRDdr4      AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRLpddr3    AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeKcDdr3     AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeURvp7Ppv;
     suppressif  ideqval SETUP_DATA.Multicontroller == 0;
        oneof varid  = SETUP_DATA.TbtSelector1,
        prompt = STRING_TOKEN(STR_PCI_TBT_SELECTOR1_RVP7),
        help = STRING_TOKEN(STR_PCI_TBT_SELECTOR_HELP),
        option text = STRING_TOKEN(STR_TBT_PCIERP5_PROMPT),   value = 5, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;
      endif;

      suppressif  ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRDdr4      OR
                  ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeRLpddr3;
        oneof varid  = SETUP_DATA.TbtSelector,
          questionid = AUTO_ID(KEY_TBT_SELECTOR_RVP7),
          prompt = STRING_TOKEN(STR_PCI_TBT_SELECTOR_RVP7),
          help = STRING_TOKEN(STR_PCI_TBT_SELECTOR_HELP),
          option text = STRING_TOKEN(STR_AUTO),   value = 0, flags = RESET_REQUIRED | INTERACTIVE;
          option text = STRING_TOKEN(STR_TBT_PCIERP9_PROMPT),   value = 9, flags =DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        endoneof;
      endif;
    endif;

    suppressif NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeSds;
      oneof varid  = SETUP_DATA.TbtSelector,
        questionid = AUTO_ID(KEY_TBT_SELECTOR_SDS),
        prompt = STRING_TOKEN(STR_PCI_TBT_SELECTOR_SDS),
        help = STRING_TOKEN(STR_PCI_TBT_SELECTOR_HELP),
        option text = STRING_TOKEN(STR_AUTO),   value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_PCIERP9_PROMPT),   value = 9, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;
    endif;

    suppressif NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeDtRvp8Crb AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeAioRvp9Crb AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeAioRvp10Erb AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeAioRvp10Crb AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeAioRvp10Evp AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeAioRvp10CrbPpv AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeSlpfPpv AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeSdlBrk AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeHaloDdr4Rvp11 AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeHaloDdr4Rvp11Ppv AND
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdKabylakeDdr4Rvp17 AND // KblGContent
               NOT ideqval SETUP_VOLATILE_DATA.PlatId == BoardIdSkylakeHaloLpddr3Rvp16;
    //
    // AdvancedFeaturesEnd
    //
      oneof varid  = SETUP_DATA.TbtSelector,
        questionid = AUTO_ID(KEY_TBT_SELECTOR_DT_HALO),
        prompt = STRING_TOKEN(STR_PCI_TBT_SELECTOR_DT_HALO),
        help = STRING_TOKEN(STR_PCI_TBT_SELECTOR_HELP),
        option text = STRING_TOKEN(STR_AUTO),   value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_PCIERP9_PROMPT),   value = 9, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_PEGRP0_PROMPT),    value = 21, flags = RESET_REQUIRED | INTERACTIVE;
      endoneof;
    endif;
#endif
// Warning !!!   Do not change or clone this definition >>>
    suppressif ideqval SETUP_DATA.TbtSupport == 0x1;
      numeric varid    = SETUP_DATA.TbtSelector,
          prompt       = STRING_TOKEN (STR_TBT_HOST_LOCATION_PROMPT),
          help         = STRING_TOKEN (STR_TBT_HOST_LOCATION_HELP),
          flags        = RESET_REQUIRED,
          minimum      = 0,
          maximum      = 255,
          step         = 1,
          default      = DEFAULT_TBT_AIC_LOCATION,
          option text  = STRING_TOKEN (STR_TBT_HOST_LOCATION_HELP), value = DEFAULT_TBT_AIC_LOCATION, flags = MANUFACTURING;
      endnumeric;
    endif;
// Warning !!!   Do not change or clone this definition <<<

      oneof varid      = SETUP_DATA.TbtHostLocationGroup,
          questionid   = AUTO_ID(KEY_TBT_LOCATION_GROUP),
          prompt       = STRING_TOKEN (STR_TBT_HOST_LOCATION_GROUP_PROMPT),
          help         = STRING_TOKEN (STR_TBT_HOST_LOCATION_GROUP_HELP),
          default      = DEFAULT_TBT_AIC_LOCATION_GROUP,
          option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_GROUP_001), value = 0x01, flags = RESET_REQUIRED | INTERACTIVE;
          option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_GROUP_000), value = 0x00, flags = MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
      endoneof;

      suppressif NOT ideqval SETUP_DATA.TbtHostLocationGroup == 0x0;
        oneof varid      = SETUP_DATA.TbtHostTempLocationSB,
            questionid   = AUTO_ID(KEY_TBT_LOCATION_SB),
// AMI_OVERRIDE_START - EIP295619 Avoid duplicate mapping ID usage
            prompt       = STRING_TOKEN (STR_TBT_HOST_LOCATION_SB_PROMPT),
            help         = STRING_TOKEN (STR_TBT_HOST_LOCATION_SB_HELP),
// AMI_OVERRIDE_END - EIP295619 Avoid duplicate mapping ID usage
            default      = DEFAULT_TBT_TEMP_AIC_LOCATION_SB,
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_000), value = 0x01, flags = MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_001), value = 0x02, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_002), value = 0x03, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_003), value = 0x04, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_004), value = 0x05, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_005), value = 0x06, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_006), value = 0x07, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_007), value = 0x08, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_008), value = 0x09, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_009), value = 0x0A, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_010), value = 0x0B, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_011), value = 0x0C, flags = RESET_REQUIRED | INTERACTIVE;
            suppressif ideqval SETUP_VOLATILE_DATA.PlatformType == TypeUltUlx;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_012), value = 0x0D, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_013), value = 0x0E, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_014), value = 0x0F, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_015), value = 0x10, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_016), value = 0x11, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_017), value = 0x12, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_018), value = 0x13, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_019), value = 0x14, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_020), value = 0x15, flags = RESET_REQUIRED | INTERACTIVE;  // AMI_OVERRIDE_START >>> (EIP279338)
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_021), value = 0x16, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_022), value = 0x17, flags = RESET_REQUIRED | INTERACTIVE;
                option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_SB_023), value = 0x18, flags = RESET_REQUIRED | INTERACTIVE;  // AMI_OVERRIDE_END >>> (EIP279338)
            endif
        endoneof;
      endif;

      suppressif NOT ideqval SETUP_DATA.TbtHostLocationGroup == 0x1;
        oneof varid      = SETUP_DATA.TbtHostTempLocationNB,
            questionid   = AUTO_ID(KEY_TBT_LOCATION_NB),
// AMI_OVERRIDE_START - EIP295619 Avoid duplicate mapping ID usage
            prompt       = STRING_TOKEN (STR_TBT_HOST_LOCATION_NB_PROMPT),
            help         = STRING_TOKEN (STR_TBT_HOST_LOCATION_NB_HELP),
// AMI_OVERRIDE_END - EIP295619 Avoid duplicate mapping ID usage
            default      = DEFAULT_TBT_TEMP_AIC_LOCATION_NB,
            // AMI_OVERRIDE_START >>> (EIP279338)
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_NB_000), value = 0x19, flags = MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_NB_001), value = 0x1A, flags = RESET_REQUIRED | INTERACTIVE;
            option text  = STRING_TOKEN(STR_TBT_HOST_LOCATION_NB_002), value = 0x1B, flags = RESET_REQUIRED | INTERACTIVE;
            // AMI_OVERRIDE_END >>> (EIP279338)
        endoneof;
      endif;
// AMI_OVERRIDE_END - Update TbtSelector by AMI setup option.

// AMI_OVERRIDE_START - Update option default by Token.
      oneof varid  = SETUP_DATA.TBThostRouter,
        questionid = AUTO_ID(KEY_TBT_HOSTROUTER),
        prompt = STRING_TOKEN(STR_PCI_TBT_HOSTROUTER),
        help = STRING_TOKEN(STR_PCI_TBT_HOSTROUTER_HELP),
        default     = TBT_HOST_ROUTER,
        option text = STRING_TOKEN(STR_PCI_TBT_ONEPORT_PROMPT),   value = 1, flags = MANUFACTURING |RESET_REQUIRED| INTERACTIVE;
        option text = STRING_TOKEN(STR_PCI_TBT_TWOPORT_PROMPT),   value = 2, flags = RESET_REQUIRED| INTERACTIVE;
      endoneof;

      numeric varid = SETUP_DATA.TbtPcieExtraBusRsvd,
        prompt      = STRING_TOKEN (STR_TBT_PCIE_RBUS_PROMPT),
        help        = STRING_TOKEN (STR_TBT_PCIE_RBUS_HELP),
        flags       = RESET_REQUIRED | INTERACTIVE,
        minimum     = 0,
        maximum     = 255,
        step        = 1,    // Stepping of 0 equates to a manual entering of a value, otherwise it will auto-increment with a left/right arrow
//        default     = 56,    // default no extra bus reserved
        default     = TBT_DEFAULT_EXTRA_BUS_RESERVED,
      endnumeric;

      numeric varid = SETUP_DATA.TbtPcieMemRsvd,
        prompt      = STRING_TOKEN (STR_TBT_PCIE_RMEM_PROMPT),
        help        = STRING_TOKEN (STR_TBT_PCIE_RMEM_HELP),
        flags       = RESET_REQUIRED | INTERACTIVE,
        minimum     = 1,
        maximum     = 4096,
        step        = 1,    // Stepping of 0 equates to a manual entering of a value, otherwise it will auto-increment with a left/right arrow
//        default     = 353,   // 353Default 10MB Memory Reserved
        default     = TBT_DEFAULT_PCIE_MEM_RESERVED,
      endnumeric;

      numeric varid = SETUP_DATA.TbtPcieMemAddrRngMax,
        prompt      = STRING_TOKEN (STR_TBT_PCIE_RMEM_ADDRRNGMAX),
        help        = STRING_TOKEN (STR_TBT_PCIE_RMEM_RNG_HELP),
        flags       = RESET_REQUIRED | INTERACTIVE,
        minimum     = 0,
        maximum     = 31,
        step        = 1,
//        default     = 26,
        default     = TBT_DEFAULT_PCIE_MEM_RESERVED_DALIG,
      endnumeric;

      numeric varid = SETUP_DATA.TbtPciePMemRsvd,
        prompt      = STRING_TOKEN (STR_TBT_PCIE_RPMEM_PROMPT),
        help        = STRING_TOKEN (STR_TBT_PCIE_RPMEM_HELP),
        flags     = RESET_REQUIRED | INTERACTIVE,
        minimum     = 1,
        maximum     = 4096,
        step        = 1,    // Stepping of 0 equates to a manual entering of a value, otherwise it will auto-increment with a left/right arrow
//        default     = 544,   // 544Default 10MB Memory Reserved
        default     = TBT_DEFAULT_PCIE_PF_MEM_RESERVED,
      endnumeric;

      numeric varid = SETUP_DATA.TbtPciePMemAddrRngMax,
        prompt      = STRING_TOKEN (STR_TBT_PCIE_RPMEM_ADDRRNGMAX),
        help        = STRING_TOKEN (STR_TBT_PCIE_RPMEM_RNG_HELP),
        flags     = RESET_REQUIRED | INTERACTIVE,
        minimum     = 0,
        maximum     = 31,
        step        = 1,
//        default     = 28,
        default     = TBT_DEFAULT_PCIE_PF_MEM_RESERVED_DALIG,
      endnumeric;

      numeric varid = SETUP_DATA.TbtPcieIoRsvd,
        prompt      = STRING_TOKEN (STR_TBT_PCIE_RVIO_PROMPT),
        help        = STRING_TOKEN (STR_TBT_PCIE_RVIO_HELP),
        flags     = RESET_REQUIRED | INTERACTIVE,
        minimum     = 0,
        maximum     = 52,
        step        = 4,    // Stepping of 0 equates to a manual entering of a value, otherwise it will auto-increment with a left/right arrow
//        default     = 4,    // 4 Default 4K IO Reserved
        default     = TBT_DEFAULT_PCIE_IO_RESERVED,
      endnumeric;
// AMI_OVERRIDE_END - Update option default by Token.
//AMI_OVERRIDE_START - EIP296758 Implement Intel document 563778, version 2
//AMI_OVERRIDE_START >>> EIP369615 : Hot-plug can't workable on KBL-R when TBT FW mode is native with RTD3 support
      oneof varid = SETUP_DATA.TbtWaSwitch,
        prompt      = STRING_TOKEN(STR_TBT_WA_SWITCH_PROMPT),
        help        = STRING_TOKEN(STR_TBT_WA_SWITCH_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags =DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_WA), value = 1, flags =  RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_TBT_NEW_WA), value = 2, flags =  RESET_REQUIRED | INTERACTIVE;
      endoneof;
//AMI_OVERRIDE_END <<< EIP369615 : Hot-plug can't workable on KBL-R when TBT FW mode is native with RTD3 support

      suppressif ideqval SETUP_DATA.TbtWaSwitch == 0 OR ideqval SETUP_DATA.TbtWaSwitch == 1;
      oneof varid = SETUP_DATA.TbtWaPrewakeEnable,
        prompt      = STRING_TOKEN(STR_NEW_WA_PRE_WAKE_PROMPT),
        help        = STRING_TOKEN(STR_NEW_WA_PRE_WAKE_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
      endoneof;

      numeric varid = SETUP_DATA.TbtWaXhciActiveLtr,
        prompt      = STRING_TOKEN (STR_NEW_WA_ACTIVE_LTR_PROMPT),
        help        = STRING_TOKEN (STR_NEW_WA_ACTIVE_LTR_HELP),
        flags       = RESET_REQUIRED | INTERACTIVE,
        minimum     = 1,
        maximum     = 1023,
        step        = 1,
        default     = 20,
      endnumeric;

      numeric varid = SETUP_DATA.TbtWaXhciHighLtr,
        prompt      = STRING_TOKEN (STR_NEW_WA_HIGH_LTR_PROMPT),
        help        = STRING_TOKEN (STR_NEW_WA_HIGH_LTR_HELP),
        flags       = RESET_REQUIRED | INTERACTIVE,
        minimum     = 3,
        maximum     = 124,
        step        = 1,
        default     = 80,
      endnumeric;

      numeric varid = SETUP_DATA.TbtWaXhciMediumLtr,
        prompt      = STRING_TOKEN (STR_NEW_WA_MEDIUM_LTR_PROMPT),
        help        = STRING_TOKEN (STR_NEW_WA_MEDIUM_LTR_HELP),
        flags       = RESET_REQUIRED | INTERACTIVE,
        minimum     = 2,
        maximum     = 123,
        step        = 1,
        default     = 40,
      endnumeric;

      numeric varid = SETUP_DATA.TbtWaXhciLowLtr,
        prompt      = STRING_TOKEN (STR_NEW_WA_LOW_LTR_PROMPT),
        help        = STRING_TOKEN (STR_NEW_WA_LOW_LTR_HELP),
        flags       = RESET_REQUIRED | INTERACTIVE,
        minimum     = 1,
        maximum     = 122,
        step        = 1,
        default     = 30,
      endnumeric;
    endif;
//AMI_OVERRIDE_END - EIP296758 Implement Intel document 563778, version 2

//AMI_OVERRIDE_START >>> EIP353107 : Boot On command has the fail rate
    numeric varid = SETUP_DATA.TbtBeforeBootOnCmdDelay,
      prompt      = STRING_TOKEN (STR_TBT_BEFORE_BOOT_ON_CMD_DELAY_PROMPT),
      help        = STRING_TOKEN (STR_TBT_BEFORE_BOOT_ON_CMD_DELAY_HELP),
      flags       = RESET_REQUIRED | INTERACTIVE,
      minimum     = 0,
      maximum     = 65535,
      step        = 1,
      default     = DEFAULT_BEFORE_TBT_BOOT_ON_CMD_DELAY,
    endnumeric;

    numeric varid = SETUP_DATA.TbtBeforeUsbOnCmdDelay,
      prompt      = STRING_TOKEN (STR_TBT_BEFORE_USB_ON_CMD_DELAY_PROMPT),
      help        = STRING_TOKEN (STR_TBT_BEFORE_USB_ON_CMD_DELAY_HELP),
      flags       = RESET_REQUIRED | INTERACTIVE,
      minimum     = 0,
      maximum     = 65535,
      step        = 1,
      default     = DEFAULT_BEFORE_TBT_USB_ON_CMD_DELAY,
    endnumeric;

    numeric varid = SETUP_DATA.TbtBeforeSxExitCmdDelay,
      prompt      = STRING_TOKEN (STR_TBT_BEFORE_SX_EXIT_CMD_DELAY_PROMPT),
      help        = STRING_TOKEN (STR_TBT_BEFORE_SX_EXIT_CMD_DELAY_HELP),
      flags       = RESET_REQUIRED | INTERACTIVE,
      minimum     = 0,
      maximum     = 65535,
      step        = 1,
      default     = DEFAULT_BEFORE_TBT_SX_EXIT_CMD_DELAY,
    endnumeric;
//AMI_OVERRIDE_END <<< EIP353107 : Boot On command has the fail rate

    goto TBT_OSSELECT_FORM_ID,
    prompt  = STRING_TOKEN(STR_TBT_OSSELECT_FORM),
    help    = STRING_TOKEN(STR_TBT_OSSELECT_FORM_HELP);

  endif; // suppressif ideqval SETUP_DATA.TbtSupport == 0;
  endform;

    form formid = AUTO_ID(TBT_OSSELECT_FORM_ID),
    title     = STRING_TOKEN(STR_TBT_OSSELECT_FORM);

      oneof varid  = SETUP_DATA.Win10Support,
        questionid  = AUTO_ID(KEY_TBT_OS_SELECTOR),
        prompt      = STRING_TOKEN(STR_TBT_WIN10_SUPPORT_PROMPT),
        help        = STRING_TOKEN(STR_TBT_WIN10_SUPPORT_HELP),
        option text = STRING_TOKEN(STR_PCI_WIN10_SUPPORT_RTD3), value = 2, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_PCI_WIN10_SUPPORT_ENABLE), value = 1, flags = RESET_REQUIRED | INTERACTIVE;
        option text = STRING_TOKEN(STR_PCI_WIN10_SUPPORT_DISABLE), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
      endoneof;
    endform;
// AMI_OVERRIDE_START - AMI TBT setup
#endif // end FORM_SET_ITEM
#endif // end MAIN_FORM_SET
// AMI_OVERRIDE_END - AMI TBT setup
