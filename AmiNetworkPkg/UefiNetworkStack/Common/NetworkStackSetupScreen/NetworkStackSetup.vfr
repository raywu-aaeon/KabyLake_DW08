//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2014, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************

//**********************************************************************
// $Header: $
//
// $Revision: $
//
// $Date: $
//**********************************************************************
// Revision History
// ----------------
// $Log: $
// 
// 
//**********************************************************************
//<AMI_FHDR_START>
//
// Name:  NetworkStackSetup.vfr
//
// Description:  Setup definitions for NetworkStack setup screen
//
//<AMI_FHDR_END>
//**********************************************************************

#include <NetworkStackSetup.h> 
#include <Token.h>

//**********************************************************************
//                  Controls Section
//
// The following section contains control macros that can be overridden
// in external files.  This allows customization of control content, 
// while ensuring the control's data is available.
//**********************************************************************

    #define NETWORKSTACK_ONEOF_NETWORK_STACK_SUPPORT \
        oneof varid    = NETWORK_STACK.Enable,\
            prompt   = STRING_TOKEN(STR_NETWORK_STACK_ENABLE),\
            help     = STRING_TOKEN(STR_NETWORK_STACK_HELP),\
            option text = STRING_TOKEN(STR_DISABLED), value=0, flags= RESET_REQUIRED;\
            option text = STRING_TOKEN(STR_ENABLED), value=1, flags= RESET_REQUIRED;\
            default = NWSTACK_DEFAULT_VALUE,\
            default = NWSTACK_DEFAULT_VALUE, defaultstore = AmiMfgDefault,\
        endoneof;

    #if Ipv4_SUPPORT == 1
        #define NETWORKSTACK_ONEOF_IPV4_PXE_SUPPORT \
            oneof varid    = NETWORK_STACK.Ipv4Pxe,\
                prompt   = STRING_TOKEN(STR_IPV4_PXE_ENABLE),\
                help     = STRING_TOKEN(STR_IPV4_PXE_HELP),\
                option text = STRING_TOKEN(STR_DISABLED), value=0, flags= RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_ENABLED), value=1, flags= RESET_REQUIRED;\
                default = NETWORKSTACK_IPV4_PXE_SUPPORT,\
                default = NETWORKSTACK_IPV4_PXE_SUPPORT, defaultstore = AmiMfgDefault,\
            endoneof;
            
         #define NETWORKSTACK_ONEOF_IPV4_HTTP_SUPPORT \
            oneof varid    = NETWORK_STACK.Ipv4Http,\
                prompt   = STRING_TOKEN(STR_IPV4_HTTP_ENABLE),\
                help     = STRING_TOKEN(STR_IPV4_HTTP_HELP),\
                option text = STRING_TOKEN(STR_DISABLED), value=0, flags= RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_ENABLED), value=1, flags= RESET_REQUIRED;\
                default = NETWORKSTACK_IPV4_HTTP_SUPPORT,\
                default = NETWORKSTACK_IPV4_HTTP_SUPPORT, defaultstore = AmiMfgDefault,\
            endoneof;
            
    #endif

    #if Ipv6_SUPPORT == 1
        #define NETWORKSTACK_ONEOF_IPV6_PXE_SUPPORT \
            oneof varid    = NETWORK_STACK.Ipv6Pxe,\
                prompt   = STRING_TOKEN(STR_IPV6_PXE_ENABLE),\
                help     = STRING_TOKEN(STR_IPV6_PXE_HELP),\
                option text = STRING_TOKEN(STR_DISABLED), value=0, flags= RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_ENABLED), value=1, flags= RESET_REQUIRED;\
                default = NETWORKSTACK_IPV6_PXE_SUPPORT,\
                default = NETWORKSTACK_IPV6_PXE_SUPPORT, defaultstore = AmiMfgDefault,\
            endoneof;
            
            #define NETWORKSTACK_ONEOF_IPV6_HTTP_SUPPORT \
            oneof varid    = NETWORK_STACK.Ipv6Http,\
                prompt   = STRING_TOKEN(STR_IPV6_HTTP_ENABLE),\
                help     = STRING_TOKEN(STR_IPV6_HTTP_HELP),\
                option text = STRING_TOKEN(STR_DISABLED), value=0, flags= RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_ENABLED), value=1, flags= RESET_REQUIRED;\
                default = NETWORKSTACK_IPV6_HTTP_SUPPORT,\
                default = NETWORKSTACK_IPV6_HTTP_SUPPORT, defaultstore = AmiMfgDefault,\
            endoneof; 
            
    #endif

    #if IpSecDxe_SUPPORT == 1
        #define NETWORKSTACK_ONEOF_IPSEC_CERTIFICATE \
            oneof varid    = NETWORK_STACK.IpsecCertificate,\
                prompt   = STRING_TOKEN(STR_IPSEC_CERTIFICATE_ENABLE),\
                help     = STRING_TOKEN(STR_IPSEC_CERTIFICATE_HELP),\
                option text = STRING_TOKEN(STR_DISABLED), value=0, flags= RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_ENABLED), value=1, flags= RESET_REQUIRED;\
                default = 1,\
                default = 1, defaultstore = AmiMfgDefault,\
            endoneof;
    #endif

    #if UefiPxeBcDxe_SUPPORT == 1
        #define NETWORKSTACK_NUMERIC_PXE_BOOT_WAIT_TIME \
            numeric varid    = NETWORK_STACK.PxeBootWaitTime,\
                prompt   = STRING_TOKEN(STR_PXE_BOOT_WAIT_TIME),\
                help     = STRING_TOKEN(STR_PXE_BOOT_WAIT_TIME_HELP),\
                flags   = RESET_REQUIRED,\
                minimum = 0,\
                maximum = 5,\
                step    = 1,\
                default = 0,\
                default = 0, defaultstore = AmiMfgDefault,\
            endnumeric;

        #define NETWORKSTACK_NUMERIC_MEDIA_DETECT_COUNT \
            numeric varid    = NETWORK_STACK.MediaDetectCount,\
                prompt   = STRING_TOKEN(STR_MEDIA_DETECT_COUNT),\
                help     = STRING_TOKEN(STR_MEDIA_DETECT_COUNT_HELP),\
                flags   = RESET_REQUIRED,\
                minimum = MIN_MEDIA_DETECT_COUNT,\
                maximum = MAX_MEDIA_DETECT_COUNT,\
                step    = 1,\
                default = DEFAULT_MEDIA_DETECT_COUNT,\
                default = DEFAULT_MEDIA_DETECT_COUNT, defaultstore = AmiMfgDefault,\
            endnumeric;
    #endif

formset
  guid   = NETWORK_STACK_GUID,
  title  = STRING_TOKEN(STR_STACK_FORM),
  help   = STRING_TOKEN(STR_STACK_FORM_HELP),

  efivarstore NETWORK_STACK,
  attribute = 0x03, // EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS
  name = NetworkStackVar,
  guid = NETWORK_STACK_GUID;
  
  defaultstore AmiMfgDefault, prompt = STRING_TOKEN(STR_NULL), attribute = 0x1;    // AMI PORTING - Manufacturing defaults
  
    form formid = NWS_FORMID_MAIN_FORM,
    title = STRING_TOKEN(STR_STACK_FORM);

        NETWORKSTACK_ONEOF_NETWORK_STACK_SUPPORT

#if Ipv4_SUPPORT == 1
    suppressif ideqval NETWORK_STACK.Enable == 0;
        NETWORKSTACK_ONEOF_IPV4_PXE_SUPPORT
        NETWORKSTACK_ONEOF_IPV4_HTTP_SUPPORT
    endif;
#endif

#if Ipv6_SUPPORT == 1
    suppressif ideqval NETWORK_STACK.Enable == 0;
        NETWORKSTACK_ONEOF_IPV6_PXE_SUPPORT
        NETWORKSTACK_ONEOF_IPV6_HTTP_SUPPORT
    endif;
#endif


#if IpSecDxe_SUPPORT == 1
    suppressif ideqval NETWORK_STACK.Enable == 0;
        NETWORKSTACK_ONEOF_IPSEC_CERTIFICATE
    endif;
#endif

#if UefiPxeBcDxe_SUPPORT == 1

    suppressif ideqval NETWORK_STACK.Enable == 0;
        NETWORKSTACK_NUMERIC_PXE_BOOT_WAIT_TIME
    endif;

    suppressif ideqval NETWORK_STACK.Enable == 0;
        NETWORKSTACK_NUMERIC_MEDIA_DETECT_COUNT
    endif;
#endif // #if UefiPxeBcDxe_SUPPORT == 1
    endform;
endformset;

//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
